package com.codeup.ui;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
import com.codeup.domain.Estudiante;
import com.codeup.domain.Nota;
import com.codeup.service.RegistroEstudiantesService;
import com.codeup.service.ArchivoService;
import java.awt.HeadlessException;
import java.io.BufferedReader;
import java.io.FileReader;
import javax.swing.table.DefaultTableModel;
import java.io.IOException;
import java.util.Arrays;

public class RegistroEstudianteFrame extends javax.swing.JFrame {
    private static final java.util.logging.Logger logger =
        java.util.logging.Logger.getLogger(RegistroEstudianteFrame.class.getName());

    private final RegistroEstudiantesService registroService = new RegistroEstudiantesService();
    private final ArchivoService archivoService = new ArchivoService();
    private final DefaultTableModel modeloTabla;
    private int nextId;

    /**
     * Creates new form RegistroEstudianteFrame
     */
    public RegistroEstudianteFrame() {
        initComponents();
        modeloTabla = (DefaultTableModel) jTable2.getModel();
        setLocationRelativeTo(null);
}
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSpinner1 = new javax.swing.JSpinner();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextPane1 = new javax.swing.JTextPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        Nombre = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Nota1 = new javax.swing.JTextField();
        Nota2 = new javax.swing.JTextField();
        Nota3 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        Edad = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        guardar = new javax.swing.JButton();
        estadisticas = new javax.swing.JButton();
        btnGuardarCSVA = new javax.swing.JButton();
        btnCerrarSesion = new javax.swing.JButton();
        btnCargarCSV = new javax.swing.JButton();

        jScrollPane1.setViewportView(jTextPane1);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Nombre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NombreActionPerformed(evt);
            }
        });

        jLabel1.setText("Nombre:");

        jLabel2.setText("Edad:");

        Nota1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nota1ActionPerformed(evt);
            }
        });

        Nota2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nota2ActionPerformed(evt);
            }
        });

        Nota3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Nota3ActionPerformed(evt);
            }
        });

        jLabel3.setText("Nota1");

        jLabel4.setText("Nota2");

        jLabel5.setText("Nota3");

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nombre", "Edad", "Nota1", "Nota2", "Nota3"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, true, true, true, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTable2);

        guardar.setText("Guardar");
        guardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                guardarActionPerformed(evt);
            }
        });

        estadisticas.setText("Estadisticas");
        estadisticas.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadisticasActionPerformed(evt);
            }
        });

        btnGuardarCSVA.setText("Guardar CSV");
        btnGuardarCSVA.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarCSVAActionPerformed(evt);
            }
        });

        btnCerrarSesion.setText("Cerrar Sesion");
        btnCerrarSesion.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCerrarSesionActionPerformed(evt);
            }
        });

        btnCargarCSV.setText("Cargar CSV");
        btnCargarCSV.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCargarCSVActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(12, 12, 12)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Edad, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(guardar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(estadisticas)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(btnGuardarCSVA)))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Nota3)
                    .addComponent(Nota2)
                    .addComponent(Nota1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(btnCargarCSV))
                        .addGap(0, 12, Short.MAX_VALUE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnCerrarSesion)
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(13, 13, 13)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nombre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Nota1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Nota2, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(Edad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Nota3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(guardar)
                    .addComponent(estadisticas)
                    .addComponent(btnGuardarCSVA)
                    .addComponent(btnCargarCSV))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 100, Short.MAX_VALUE)
                .addComponent(btnCerrarSesion)
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void NombreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NombreActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_NombreActionPerformed

    private void Nota3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nota3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nota3ActionPerformed

    private void Nota2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nota2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nota2ActionPerformed

    private void Nota1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Nota1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Nota1ActionPerformed

    private void estadisticasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadisticasActionPerformed

    var estudiantes = registroService.getEstudiantes();
    if (estudiantes.isEmpty()) {
        javax.swing.JOptionPane.showMessageDialog(this, "No hay estudiantes registrados");
        return;
    }

    double promedioGeneral = estudiantes.stream()
            .mapToDouble(Estudiante::calcularPromedio)
            .average().orElse(0);

    long aprobados = estudiantes.stream().filter(Estudiante::estaAprobado).count();

    javax.swing.JOptionPane.showMessageDialog(this,
            "Promedio general: " + String.format("%.2f", promedioGeneral) +
            "\nAprobados: " + aprobados +
            "\nReprobados: " + (estudiantes.size() - aprobados));
    }//GEN-LAST:event_estadisticasActionPerformed

    private void btnGuardarCSVAActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarCSVAActionPerformed
                                               
    javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
    fileChooser.setDialogTitle("Guardar estudiantes como CSV");

    fileChooser.setSelectedFile(new java.io.File("estudiantes.csv"));

    int userSelection = fileChooser.showSaveDialog(this);

    if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
        java.io.File fileToSave = fileChooser.getSelectedFile();

        try (java.io.PrintWriter pw = new java.io.PrintWriter(fileToSave)) {

            // Cabecera con ID
            pw.println("ID,Nombre,Edad,Nota1,Nota2,Nota3");

            // Recorrer tabla y guardar filas
            for (int i = 0; i < modeloTabla.getRowCount(); i++) {
                pw.println(
                    modeloTabla.getValueAt(i, 0) + "," +
                    modeloTabla.getValueAt(i, 1) + "," +  
                    modeloTabla.getValueAt(i, 2) + "," +  
                    String.format("%.2f", modeloTabla.getValueAt(i, 3)) + "," +
                    String.format("%.2f", modeloTabla.getValueAt(i, 4)) + "," +
                    String.format("%.2f", modeloTabla.getValueAt(i, 5))         
                );
            }

            javax.swing.JOptionPane.showMessageDialog(this,
                    "Archivo guardado en: " + fileToSave.getAbsolutePath(),
                    "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (Exception ex) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error al guardar el archivo: " + ex.getMessage(),
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }
    }//GEN-LAST:event_btnGuardarCSVAActionPerformed

    private void guardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_guardarActionPerformed
try {
        String nombre = Nombre.getText().trim();
        int edad = (int) Edad.getValue();

        double n1 = Double.parseDouble(Nota1.getText().trim());
        double n2 = Double.parseDouble(Nota2.getText().trim());
        double n3 = Double.parseDouble(Nota3.getText().trim());

        Estudiante estudiante = new Estudiante(
                nombre, edad,
                Arrays.asList(new Nota(n1), new Nota(n2), new Nota(n3))
        );

        registroService.agregarEstudiante(estudiante);
        int idGenerado = nextId++;
        modeloTabla.addRow(new Object[]{
                idGenerado,
                estudiante.getNombre(),
                estudiante.getEdad(),
                estudiante.getNotas().get(0).getValor(),
                estudiante.getNotas().get(1).getValor(),
                estudiante.getNotas().get(2).getValor()
        });

        // Limpiar campos
        Nombre.setText("");
        Nota1.setText("");
        Nota2.setText("");
        Nota3.setText("");
        Edad.setValue(0);

    } catch (NumberFormatException ex) {
        javax.swing.JOptionPane.showMessageDialog(this,
                "Error: " + ex.getMessage(),
                "Entrada inválida",
                javax.swing.JOptionPane.ERROR_MESSAGE);
    }
    }//GEN-LAST:event_guardarActionPerformed

    private void btnCargarCSVActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCargarCSVActionPerformed
javax.swing.JFileChooser fileChooser = new javax.swing.JFileChooser();
    fileChooser.setDialogTitle("Seleccionar archivo CSV");

    int userSelection = fileChooser.showOpenDialog(this);

    if (userSelection == javax.swing.JFileChooser.APPROVE_OPTION) {
        java.io.File archivo = fileChooser.getSelectedFile();

        try (BufferedReader br = new BufferedReader(new FileReader(archivo))) {
            String linea = br.readLine();
            modeloTabla.setRowCount(0);

            int maxId = 0; // para actualizar el nextId

            while ((linea = br.readLine()) != null) {
                String[] datos = linea.split(",");

                if (datos.length >= 6) {
                    int id = Integer.parseInt(datos[0].trim());
                    String nombre = datos[1].trim();
                    int edad = Integer.parseInt(datos[2].trim());

                    double nota1 = Double.parseDouble(datos[3].trim());
                    double nota2 = Double.parseDouble(datos[4].trim());
                    double nota3 = Double.parseDouble(datos[5].trim());

                    // Agregar a la tabla directamente
                    modeloTabla.addRow(new Object[]{
                        id, nombre, edad, nota1, nota2, nota3
                    });

                    // Actualizar el mayor ID encontrado
                    if (id > maxId) {
                        maxId = id;
                    }
                }
            }

            // Ajustar el contador para el siguiente estudiante
            nextId = maxId + 1;

            javax.swing.JOptionPane.showMessageDialog(this,
                    "Archivo cargado correctamente: " + archivo.getAbsolutePath(),
                    "Éxito", javax.swing.JOptionPane.INFORMATION_MESSAGE);

        } catch (HeadlessException | IOException | NumberFormatException ex) {
            javax.swing.JOptionPane.showMessageDialog(this,
                    "Error al cargar el archivo: " + ex.getMessage(),
                    "Error", javax.swing.JOptionPane.ERROR_MESSAGE);
        }
    }

    }//GEN-LAST:event_btnCargarCSVActionPerformed

    private void btnCerrarSesionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCerrarSesionActionPerformed
int opcion = javax.swing.JOptionPane.showConfirmDialog(
        this,
        "¿Seguro que quieres cerrar sesión?",
        "Confirmar cierre",
        javax.swing.JOptionPane.YES_NO_OPTION
    );

    if (opcion == javax.swing.JOptionPane.YES_OPTION) {
        this.dispose();
        java.awt.EventQueue.invokeLater(() -> new com.codeup.ui.Login().setVisible(true));
    }
    }//GEN-LAST:event_btnCerrarSesionActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new RegistroEstudianteFrame().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Edad;
    private javax.swing.JTextField Nombre;
    private javax.swing.JTextField Nota1;
    private javax.swing.JTextField Nota2;
    private javax.swing.JTextField Nota3;
    private javax.swing.JButton btnCargarCSV;
    private javax.swing.JButton btnCerrarSesion;
    private javax.swing.JButton btnGuardarCSVA;
    private javax.swing.JButton estadisticas;
    private javax.swing.JButton guardar;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpinner1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextPane jTextPane1;
    // End of variables declaration//GEN-END:variables
}
